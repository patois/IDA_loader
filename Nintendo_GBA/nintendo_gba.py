import idc 
import idaapi
import struct

ROM_SIGNATURE_OFFSET 	= 4
ROM_SIGNATURE        	= b"\x24\xFF\xAE\x51" # TO FIX more than 4 bytes
ROM_FORMAT_NAME        	= "Nintendo GBA ROM"
SIZE_HEADER		= 0xC0
ROM_START		= 0x08000000
ROM_SIZE		= 0x01000000

def dwordAt(li, off):
    li.seek(off)
    s = li.read(4)
    if len(s) < 4: 
        return 0
    return struct.unpack('<I', s)[0]

def memset_seg(ea, size):
    for i in range(0, size):
        idc.patch_byte(ea + i, 0)

def accept_file(li, filename):
    # check the Nintendo Logo
    li.seek(ROM_SIGNATURE_OFFSET)
    if li.read(4) == ROM_SIGNATURE:
        # accept the file
        return ROM_FORMAT_NAME

    # unrecognized format
    return 0

def load_file(li, neflags, format):
    if format != ROM_FORMAT_NAME:
        Warning("Unknown format name: '%s'" % format)
        return 0
    jump = dwordAt(li, 0)
    # Test ARM branch
    if jump & 0xFF000000 != 0xEA000000:
        Warning("Unknown format name: '%s'" % format)
        return 0
    idaapi.set_processor_type("arm", idc.SETPROC_LOADER_NON_FATAL|idc.SETPROC_LOADER)
    li.seek(0, idaapi.SEEK_END)
    size = li.tell()

    # Adding Header Section
    idc.AddSeg(ROM_START, ROM_START + SIZE_HEADER, 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(ROM_START, "HEADER")
    idc.set_segm_type(ROM_START, idc.SEG_CODE)
    li.seek(0)
    li.file2base(0, ROM_START, ROM_START + SIZE_HEADER, 0)

    # Adding OEP
    idaapi.add_entry(ROM_START, ROM_START, "start", 1)
    idaapi.cvar.inf.startIP = ROM_START
    idaapi.cvar.inf.beginEA = ROM_START

    # Adding ROM Section
    idc.AddSeg(ROM_START + SIZE_HEADER, ROM_START + (ROM_SIZE - SIZE_HEADER), 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(ROM_START + SIZE_HEADER, "ROM")
    idc.set_segm_type(ROM_START + SIZE_HEADER, idc.SEG_CODE)
    li.seek(SIZE_HEADER)
    li.file2base(0, ROM_START + SIZE_HEADER, ROM_START + size, 0)

    # Adding EWRAM
    idc.AddSeg(0x02000000, 0x02040000, 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(0x02000000, "EWRAM")
    memset_seg(0x02000000, 0x40000)

    # Adding IWRAM
    idc.AddSeg(0x03000000, 0x03008000, 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(0x03000000, "IWRAM")
    memset_seg(0x03000000, 0x8000)

    # Adding IO / Registers
    idc.AddSeg(0x04000000, 0x04000400, 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(0x04000000, "IOregisters")
    memset_seg(0x04000000, 0x400)

    # Adding BIOS System ROM
    idc.AddSeg(0x00000000, 0x00004000, 0, 1, idaapi.saRelPara, idaapi.scPub)
    idc.set_segm_name(0x00000000, "BIOS")
    memset_seg(0x00000000, 0x4000)
    idc.set_segm_type(0x0000000, idc.SEG_CODE)

    idaapi.add_extra_cmt(ROM_START, True, "ROM HEADER")
    li.seek(0xA0)
    idc.update_extra_cmt(ROM_START, 1,  "; Game Title : %s" % li.read(12))
    idc.update_extra_cmt(ROM_START, 2,  "; Game Code : %s" % li.read(4))
    idc.update_extra_cmt(ROM_START, 3,  "; Marker Code : %s" % li.read(2))
    idc.update_extra_cmt(ROM_START, 4,  "; Fixed value : %02X" % struct.unpack("<B", li.read(1))[0])
    idc.update_extra_cmt(ROM_START, 5,  "; Main unit code : %02X" % struct.unpack("<B", li.read(1))[0])
    idc.update_extra_cmt(ROM_START, 6,  "; Device type : %02X" % struct.unpack("<B", li.read(1))[0])
    idc.update_extra_cmt(ROM_START, 7,  "; Reserved Area : db 7 dup(0)")
    li.read(7)
    idc.update_extra_cmt(ROM_START, 8,  "; Software version %02X" % struct.unpack("<B", li.read(1))[0])
    idc.update_extra_cmt(ROM_START, 9,  "; Complement Check %02X" % struct.unpack("<B", li.read(1))[0])
    idc.update_extra_cmt(ROM_START, 10,  "; Reserved Area : db 2 dup(0)")
    
    io_naming()
    print("[+] Load OK")
    return 1

def io_naming():
    idc.set_name(0x04000000, "LCDControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000000, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000002, "Undocumented-GreenSwap", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000002, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000004, "GeneralLCDStatus(STAT,LYC)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000004, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000006, "VerticalCounter(LY)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000006, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000008, "BG0Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000008, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400000A, "BG1Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400000A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400000C, "BG2Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400000C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400000E, "BG3Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400000E, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000010, "BG0X-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000010, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000012, "BG0Y-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000012, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000014, "BG1X-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000014, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000016, "BG1Y-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000016, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000018, "BG2X-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000018, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400001A, "BG2Y-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400001A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400001C, "BG3X-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400001C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400001E, "BG3Y-Offset", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400001E, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000020, "BG2Rotation/ScalingParameterA(dx)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000020, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000022, "BG2Rotation/ScalingParameterB(dmx)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000022, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000024, "BG2Rotation/ScalingParameterC(dy)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000024, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000026, "BG2Rotation/ScalingParameterD(dmy)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000026, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000028, "BG2ReferencePointX-Coordinate", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000028, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x0400002C, "BG2ReferencePointY-Coordinate", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400002C, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000030, "BG3Rotation/ScalingParameterA(dx)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000030, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000032, "BG3Rotation/ScalingParameterB(dmx)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000032, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000034, "BG3Rotation/ScalingParameterC(dy)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000034, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000036, "BG3Rotation/ScalingParameterD(dmy)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000036, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000038, "BG3ReferencePointX-Coordinate", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000038, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x0400003C, "BG3ReferencePointY-Coordinate", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400003C, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000040, "Window0HorizontalDimensions", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000040, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000042, "Window1HorizontalDimensions", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000042, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000044, "Window0VerticalDimensions", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000044, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000046, "Window1VerticalDimensions", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000046, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000048, "InsideofWindow0and1", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000048, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400004A, "InsideofOBJWindow&OutsideofWindows", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400004A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400004C, "MosaicSize", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400004C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400004E, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000050, "ColorSpecialEffectsSelection", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000050, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000052, "AlphaBlendingCoefficients", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000052, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000054, "Brightness(Fade-In/Out)Coefficient", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000054, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000056, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000060, "Channel1Sweepregister(NR10)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000060, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000062, "Channel1Duty/Length/Envelope(NR11,NR12)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000062, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000064, "Channel1Frequency/Control(NR13,NR14)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000064, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000066, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000068, "Channel2Duty/Length/Envelope(NR21,NR22)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000068, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400006A, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x0400006C, "Channel2Frequency/Control(NR23,NR24)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400006C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400006E, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000070, "Channel3Stop/WaveRAMselect(NR30)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000070, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000072, "Channel3Length/Volume(NR31,NR32)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000072, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000074, "Channel3Frequency/Control(NR33,NR34)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000074, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000076, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000078, "Channel4Length/Envelope(NR41,NR42)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000078, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400007A, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x0400007C, "Channel4Frequency/Control(NR43,NR44)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400007C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400007E, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000080, "ControlStereo/Volume/Enable(NR50,NR51)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000080, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000082, "ControlMixing/DMAControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000082, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000084, "ControlSoundon/off(NR52)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000084, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000086, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000088, "SoundPWMControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000088, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400008A, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000090, "Channel3WavePatternRAM(2banks!!)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x040000A0, "ChannelAFIFO,Data0-3", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000A0, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000A4, "ChannelBFIFO,Data0-3", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000A4, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000A8, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x040000B0, "DMA0SourceAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000B0, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000B4, "DMA0DestinationAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000B4, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000B8, "DMA0WordCount", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000B8, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000BA, "DMA0Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000BA, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000BC, "DMA1SourceAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000BC, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000C0, "DMA1DestinationAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000C0, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000C4, "DMA1WordCount", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000C4, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000C6, "DMA1Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000C6, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000C8, "DMA2SourceAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000C8, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000CC, "DMA2DestinationAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000CC, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000D0, "DMA2WordCount", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000D0, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000D2, "DMA2Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000D2, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000D4, "DMA3SourceAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000D4, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000D8, "DMA3DestinationAddress", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000D8, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x040000DC, "DMA3WordCount", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000DC, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000DE, "DMA3Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x040000DE, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x040000E0, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000100, "Timer0Counter/Reload", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000100, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000102, "Timer0Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000102, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000104, "Timer1Counter/Reload", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000104, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000106, "Timer1Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000106, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000108, "Timer2Counter/Reload", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000108, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400010A, "Timer2Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400010A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400010C, "Timer3Counter/Reload", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400010C, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400010E, "Timer3Control", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400010E, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000110, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000120, "SIOData(Normal-32bitMode)(sharedwithbelow!)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000120, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000120, "SIOData0(Parent)(Multi-PlayerMode)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000120, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000122, "SIOData1(1stChild)(Multi-PlayerMode)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000122, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000124, "SIOData2(2ndChild)(Multi-PlayerMode)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000124, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000126, "SIOData3(3rdChild)(Multi-PlayerMode)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000126, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000128, "SIOControlRegister", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000128, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400012A, "SIOData(LocalofMulti-Player)(sharedbelow)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400012A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400012A, "SIOData(Normal-8bitandUARTMode)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x0400012A, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400012C, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000130, "KeyStatus", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000130, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000132, "KeyInterruptControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000132, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000134, "SIOModeSelect/GeneralPurposeData", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000134, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000136, "IRAncient-InfraredRegister(Prototypesonly)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000138, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000140, "SIOJOYBusControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000140, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000142, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000150, "SIOJOYBusReceiveData", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000150, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000154, "SIOJOYBusTransmitData", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000154, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000158, "SIOJOYBusReceiveStatus", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000158, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400015A, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000200, "InterruptEnableRegister", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000200, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000202, "InterruptRequestFlags/IRQAcknowledge", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000202, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000204, "GamePakWaitstateControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000204, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x04000206, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000208, "InterruptMasterEnableRegister", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000208, idc.FF_WORD, 2, idaapi.BADADDR)
    idc.set_name(0x0400020A, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000300, "Undocumented-PostBootFlag", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000300, idc.FF_BYTE, 1, idaapi.BADADDR)
    idc.set_name(0x04000301, "Undocumented-PowerDownControl", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000301, idc.FF_BYTE, 1, idaapi.BADADDR)
    idc.set_name(0x04000302, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000411, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.set_name(0x04000800, "Undocumented-InternalMemoryControl(R/W)", idc.SN_NOCHECK | idc.SN_NOWARN)
    idc.create_data(0x04000800, idc.FF_DWORD, 4, idaapi.BADADDR)
    idc.set_name(0x04000804, "Notused", idc.SN_NOCHECK | idc.SN_NOWARN)


def main():
    return 0 
